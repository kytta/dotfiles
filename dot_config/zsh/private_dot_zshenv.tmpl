#!/bin/zsh
# chezmoi:template:left-delimiter="# [[" right-delimiter=]]
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.
#
# Do not modify this file unless you know exactly what you are doing.
# It is strongly recommended to keep all shell customization and configuration
# (including exported environment variables such as PATH) in ~/.zshrc or in
# files sourced from ~/.zshrc. If you are certain that you must export some
# environment variables in ~/.zshenv, do it where indicated by comments below.

if [ -n "${ZSH_VERSION-}" ]; then
  # These have to be the same across systems for the sake of portability
  export XDG_CONFIG_HOME="$HOME/.config"
  export XDG_DATA_HOME="$HOME/.local/share"
  export XDG_STATE_HOME="$HOME/.local/state"

  # Cache dir should be different so that it can be cleaned by the OS
  if [[ "$OSTYPE" == darwin* ]]; then
    export XDG_CACHE_HOME="$HOME/Library/Caches"
  elif [[ "$OSTYPE" == cygwin* ]]; then
    export XDG_CACHE_HOME="$HOME/AppData/Local/Temp"
  else
    export XDG_CACHE_HOME="$HOME/.cache"
  fi

  # Keep these bastards off the home dir!
  export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
  export GOPATH="$XDG_DATA_HOME"/go
  export GOMODCACHE="$XDG_CACHE_HOME"/go/mod
  export MYSQL_HISTFILE="$XDG_DATA_HOME"/mysql_history
  export TERMINFO="$XDG_DATA_HOME"/terminfo
  export TERMINFO_DIRS="$XDG_DATA_HOME"/terminfo:/usr/share/terminfo
  export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
  export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
  export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
  export CARGO_HOME="$XDG_DATA_HOME"/cargo

  # [[ if eq .chezmoi.os "darwin" -]]
  path+=("/Library/Apple/usr/bin" "/opt/X11/bin")
  # [[ end ]]

  # Homebrew
  # [[ if .homebrew ]]
  export HOMEBREW_BAT=1
  export HOMEBREW_CASK_OPTS="$HOMEBREW_CASK_OPTS --no-quarantine"
  export HOMEBREW_CLEANUP_PERIODIC_FULL_DAYS=7
  export HOMEBREW_CLEANUP_MAX_AGE_DAYS=30
  export HOMEBREW_NO_GOOGLE_ANALYTICS=1
  export HOMEBREW_NO_ENV_HINTS=1
  export HOMEBREW_NO_INSTALL_CLEANUP=1

  eval "$(# [[ joinPath .homebrew.prefix "bin" "brew" ]] shellenv)"

  path=(
    "$HOMEBREW_PREFIX/opt/curl/bin"
    "$HOMEBREW_PREFIX/opt/gnu-getopt/bin"
    "$HOMEBREW_PREFIX/opt/ncurses/bin"

    $path
  )

  fpath=(
    "$HOMEBREW_PREFIX/share/zsh/site-functions"
    $fpath
  )
  # [[ end ]]

  # Local bins
  path=("$HOME/.local/bin" $path)
  fpath=(
    "$ZDOTDIR/functions"
    $fpath
  )
  manpath=(
    "$HOME/.local/share/man"
    $manpath
  )

  # Shims (nodenv, pyenv, etc.)
  if (( $+commands[pyenv] )); then
    export PYENV_ROOT="$XDG_DATA_HOME"/pyenv
    eval "$(pyenv init - zsh)"
  fi

  if (( $+commands[nodenv] )); then
    export NODENV_ROOT="$XDG_DATA_HOME"/nodenv
    eval "$(nodenv init - zsh)"
  fi

  # More env setups
  if (( $+commands[pnpm] )); then
    export PNPM_HOME="$XDG_DATA_HOME/pnpm"
    path=( "$PNPM_HOME" $path )
  fi

  # [[ if eq .chezmoi.os "darwin" -]]
  # Fix Python multiprocessing
  export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
  # [[ end ]]

  : ${ZDOTDIR:=~/.config/zsh}
  setopt no_global_rcs
  [[ -o no_interactive && -z "${Z4H_BOOTSTRAPPING-}" ]] && return
  setopt no_rcs
  unset Z4H_BOOTSTRAPPING
fi

Z4H_URL="https://raw.githubusercontent.com/romkatv/zsh4humans/v5"
: "${Z4H:=${XDG_CACHE_HOME:-$HOME/.cache}/zsh4humans/v5}"

umask o-w

if [ ! -e "$Z4H"/z4h.zsh ]; then
  mkdir -p -- "$Z4H" || return
  >&2 printf '\033[33mz4h\033[0m: fetching \033[4mz4h.zsh\033[0m\n'
  if command -v curl >/dev/null 2>&1; then
    curl -fsSL -- "$Z4H_URL"/z4h.zsh >"$Z4H"/z4h.zsh.$$ || return
  elif command -v wget >/dev/null 2>&1; then
    wget -O-   -- "$Z4H_URL"/z4h.zsh >"$Z4H"/z4h.zsh.$$ || return
  else
    >&2 printf '\033[33mz4h\033[0m: please install \033[32mcurl\033[0m or \033[32mwget\033[0m\n'
    return 1
  fi
  mv -- "$Z4H"/z4h.zsh.$$ "$Z4H"/z4h.zsh || return
fi

. "$Z4H"/z4h.zsh || return

setopt rcs
